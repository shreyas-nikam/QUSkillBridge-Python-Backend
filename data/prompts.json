{
    "AMBIGUITY_RESOLUTION_PROMPT": "\nGenerate the OUTPUT QUESTION based on the following examples for the last query.\n\nHISTORY:\n[]\nNOW QUESTION: Hello, how are you?\nNEED COREFERENCE RESOLUTION: No => THOUGHT: Consequently, the output question mirrors the current query.\nOUPUT QUESTION: Hello, how are you?\n-------------------\nHISTORY:\n[User: Is Milvus a vector database?\nYou: Yes, Milvus is a vector database.]\nNOW QUESTION: How to use it?\nNEED COREFERENCE RESOLUTION: Yes => THOUGHT: I must substitute 'it' with 'Milvus' in the current question.\nOUTPUT QUESTION: How to use Milvus?\n-------------------\nHISTORY:\n[]\nNOW QUESTION: What are its features?\nNEED COREFERENCE RESOLUTION: Yes => THOUGHT: Although 'it' requires substitution, there's no suitable reference in the history. Thus, the output question remains unchanged. \nOUTPUT QUESTION: What are its features?\n-------------------\nHISTORY:\n[User: What is PyTorch?\nYou: PyTorch is an open-source machine learning library for Python. It provides a flexible and efficient framework for building and training deep neural networks.\nUser: What is Tensorflow?\nYou: TensorFlow is an open-source machine learning framework. It provides a comprehensive set of tools, libraries, and resources for building and deploying machine learning models.]\nNOW QUESTION: What is the difference between them?\nNEED COREFERENCE RESOLUTION: Yes => THOUGHT: 'Them' should be replaced with 'PyTorch and Tensorflow' in the current question.\nOUTPUT QUESTION: What is the difference between PyTorch and Tensorflow?\n-------------------\nHISTORY:[\n{history}\n]\nNOW QUESTION: {question}\nNEED COREFERENCE RESOLUTION:\nOUTPUT QUESTION: ",
    "RESPONSE_PROMPT": "\nAnswer the given question using the provided context only. \nYou have to return 2 things :\n1. A conversational reponse to the question below using the context and previous conversation only. Return the answer in the form of bullet points if the answer is longer than 100 words in markdown format.\n2. A list of three related follow-up questions to the question that the user might have. Do not repeat the suggested questions. \n\n{format_instructions}\n\nDONT FORGET TO PUT COMMA(,) between the keys in JSON output\n \nHistory:\n{history}\n\nContext:\n{context}\n\n\nQuestion:\n{question}\n\nIf the answer is not present in the context, return 'QuCopilot is designed to answer questions based on the content you just reviewed. I am sorry, I can't answer your question as is. Can you provide more context to your question if you believe your question was relevant to the topic we just discussed?'",
    "RETRY_PROMPT": "\nError encountered: {e}\n\nRegenerate the previous answer with proper JSON format\nDO NOT FORGET TO PUT COMMA(,) between the keys in JSON output\n{format_instructions}\n\n{history}\n\nYou:\n{context}\n\nQuestion:\n{question}",
    "GET_COURSE_OUTLINE_PROMPT": "\n**Task:** Develop a tailored learning program for an individual based on their LinkedIn profile and the specific requirements of a job they are targeting. The course should focus on filling skill gaps and aligning with the individual's current level of expertise and education, without covering skills they already possess. The course should not include an estimated timeline to completion or other sources such as Coursera, Udemy, etc.\n**Inputs:**\n- **Attached Profile:** {{PROFILE}} - This profile includes the individual's current skills, experience, and educational background.\n- **Known Skills:** {{SKILLS}} - Skills the individual already has; these should be excluded from the course outline.\n- **Aspired Position:** {{POSITION}} - This is the job the individual aims to secure.\n- **Job Description and Requirements:** {{DESCRIPTION}} - A comprehensive list of the skills, knowledge, and experience required for the aspired position, guiding the course content.\n**Course Design Instructions:**\n1. **Identify Skill Gaps:** Analyze the provided profile, known skills, and job description to determine missing skills and knowledge areas.\n2. **Course Modules:** Design the course by organizing it into specific modules, each targeting a distinct area requiring development.\n3. **Submodule Detailing:** Further break down each module into submodules for targeted learning within the broader topic.\n4. **Learning Outcomes:** Define clear learning outcomes for each submodule, specifying the skills and knowledge to be acquired.\n**Required Course Structure:**\n- The course should consist of multiple modules.\n- Each module should include several submodules.\n- Define specific learning outcomes for each submodule to ensure actionable and attainable goals.\n**Output Format Example:**\n# Module: Advanced Financial Analysis\n## Submodule 1: Quantitative Risk Assessment\n### Learning Outcomes:\n- Understand and apply various quantitative risk assessment models.\n- Analyze and interpret the results of risk assessment tools.\n## Submodule 2: Regulatory Frameworks and Compliance\n### Learning Outcomes:\n- Gain knowledge of global financial regulatory standards.\n- Assess compliance requirements and implement necessary changes.\n**Criteria for Module Inclusion:**\n- The curriculum should not cover any skills listed in the input.\n- Avoid overly broad or vague topics; focus on specific, actionable content that can be mastered within a few weeks.\n**Input Profile:**\n{PROFILE}\n**Known Skills:**\n{SKILLS}\n**Aspired Position:**\n{POSITION}\n**Job Description and Requirements:**\n{DESCRIPTION}\n**Course Outline:**",
    "GET_RECOMMENDED_JOB_TITLES_AND_LOCATIONS_PROMPT": "You are to analyze the LinkedIn profile provided and recommend job titles and locations best suited for the individual's skills, experience, and career aspirations. The recommendations should be geographically specific, similar to formats like 'Boston, MA' and the recommendations should be based on the profile's most recent experiences and skill level. Ensure the suggestions are realistic and align with the individual's career level and industry.  \n**Instructions for Generating Recommendations**:  \n1. **Profile Analysis**: Thoroughly review the profile content to understand the individual's current role, skills, experiences, and industry.  \n2. **Identify Suitable Roles**: Determine potential job titles that match the individual's skills and career aspirations.  \n3. **Geographical Preferences**: Consider the individual's possible location preferences or industry hubs that align with their profile for job opportunities.  \n4. **Output Restriction**: Provide exactly three job title and location pairs that reflect realistic and achievable career moves.  \n**Profile to Analyze**: {PROFILE}  \n**Output Requirements**:  \n- Return a list of three job title and location pairs.  \n- The important positions should be first. The positions should be in decreasing order of importance.  \n- If the profile lacks sufficient detail to accurately generate recommendations, prompt the user to provide more comprehensive information.  \n**Example of Desired Output Format**:  \n[['Data Scientist', 'San Francisco, CA'], ['Machine Learning Engineer', 'Boston, MA'], ['AI Specialist', 'New York, NY']]  \n- ONLY RETURN A PYTHON LIST OF LISTS. \n**Handling Insufficient Information**:  \n- If the available information in the profile is insufficient to make well-informed recommendations, return:  \n  'Please update your profile or resume to get better job recommendations.'  \n    \n",
    "CALCULATE_DELTA_PROMPT": "Task: Identify critical skills that are missing from an individual's skill set by analyzing LinkedIn profiles and job descriptions. The goal is to pinpoint essential skills for career advancement that the individual does not currently possess.\nInstructions for Identifying Skill Gaps:\nProfile Review: Examine the individual's LinkedIn profile to understand their existing skills, educational background, and professional experience.\nJob Description Analysis: Read the job description to extract the required skills and qualifications for the role.\nSkill Gap Identification: Compare the skills listed in the job description against those provided in the LinkedIn profile and the skills already known skills to determine which necessary skills are missing.\nFocus on Relevant Skills: Only include professional or technical skills. Exclude generic, overly broad, or non-specific skills, and skills that are too broad, require specialized degrees, or are primarily transferable.\nOutput Specification: List only the skills that are essential for the job but absent from the individual's known skills and profile.\nExample Inputs and Outputs:\nInput 1:\nProfile to Analyze: [Details of LinkedIn Profile including skills like Project Management, Microsoft Office]\nKnown Skills: ['Python Coding']\nJob Description: [Details of Job Description requiring Java Coding, Data Analysis, Project Management, Machine Learning]\nOutput 1:\npython\n```['Java Coding', 'Data Analysis', 'Machine Learning']```\nInput 2:\nProfile to Analyze: [Details of LinkedIn Profile including skills like Social Media, Content Creation]\nKnown Skills: ['SEO']\nJob Description: [Details of Job Description requiring SEO, Advanced Marketing Strategy, Business Analytics]\nOutput 2:\npython\n```['Advanced Marketing Strategy', 'Business Analytics']```\nNew Input to Analyze:\nProfile to Analyze: {PROFILE}\nKnown Skills: {SKILLS}\nJob Description: {JOB_DESCRIPTION}\nOutput Format Requirements:\nProduce a list of up to five skills that the individual needs to acquire or improve upon to qualify for the job, formatted as a simple array of skill names.\nHandling Insufficient Information:\nIf the profile and job description match exactly or if the profile information is too vague to perform an analysis, the output should be:\n'Please provide a more detailed profile or job description to identify specific skill gaps.'",
    "GET_SKILLS_PROMPT": "**Task Description:**\nExtract technical skills from a given individual's profile. The skills should be extracted based on the headline, summary, education and experience of the person and any other fields that seem to be valid. The profile is detailed and includes several sections like summary, headline, experience, education, and more. Your output should list only the technical skills in a Python list format, which will then be used as input for another function. Ensure the output is strictly in the specified format.\n**Input:**\n- **Profile Details**: A JSON object containing various fields related to the individual's professional and personal details.\n**Input Example:**\n```json\n{{\n    'summary': 'Experienced software developer specializing in modern web technologies...',\n    'name': 'John Doe',\n    'email': 'john.doe@example.com',\n    'profile_id': '12345',\n    'profile_image': 'url_to_image',\n    'location_name': 'San Francisco, CA',\n    'headline': 'Senior Software Developer at Tech Solutions',\n    'education': 'Bachelor of Science in Computer Science from Stanford University',\n    'experience': '5 years at XYZ Corp as Lead Developer',\n}}\n```\n**Output Format:**\nReturn the technical skills as a Python list:\n```['Python', 'JavaScript', 'SQL', 'React']\n```\n**Note:**\n- Output only the technical skills as a list. This output will be parsed and utilized in another function.\nInput Profile:\n{PROFILE}\n**Output:**",
    "GET_JOB_PREFERENCES_PROMPT": "**Task Description:**\nExtract job preferences and preferred job locations from an individual's profile. The profile consists of various fields that detail the person's professional and personal background. Your task is to generate a JSON dictionary that lists the preferred job roles and the preferred job locations based on the profile information. Ensure the output is in the correct JSON dictionary format as specified.\n**Input:**\n- **Profile Details**: A JSON object containing various fields related to the individual's professional and personal details.\n**Input Example:**\n{{\n    'summary': 'Passionate developer interested in software and web development roles...',\n    'name': 'John Doe',\n    'email': 'john.doe@example.com',\n    'profile_id': '12345',\n    'profile_image': 'url_to_image',\n    'location_name': 'San Francisco, CA',\n    'headline': 'Seeking new opportunities',\n    'education': 'Bachelor of Science in Computer Science from Stanford University',\n    'experience': '5 years at XYZ Corp in software development',\n }}\n**Output Format:**\nReturn the job preferences and job locations as a JSON dictionary:\n{{\n    'preferred_jobs': ['Software Developer', 'Full Stack Developer'\n    ],\n    'preferred_locations': ['San Francisco', 'Remote'\n    ]\n  }}\n**Note:**\n- Ensure the output is a JSON dictionary containing the fields `preferred_jobs` and `preferred_locations`, as this will be parsed by another function.\n**Input Profile:**\n{PROFILE}\n**Output:**",
    "PARSE_RESUME_PROMPT": "**Task Description:**\nYou are given a resume and need to extract detailed information from it to populate a structured JSON dictionary. The dictionary should include fields such as summary, name, email, profile ID, and more, each derived from the resume content. Your task is to carefully read the resume, identify these key pieces of information, and format them accurately into the specified JSON structure.\n**Input:**\n- **Resume**: A text document containing comprehensive details about an individual's professional background.\n**Output Format:**\nReturn the extracted information as a JSON dictionary with the following keys:\n```json\n{{\n    'summary': '',\n    'name': '',\n    'email': '',\n    'profile_id': '',\n    'profile_image': '',\n    'location_name': '',\n    'headline': '',\n    'education': '',\n    'experience': '',\n    'skills': '',\n    'preferred_jobs': '',\n    'preferred_locations': ''\n  }}\n```\n**Example:**\n**Input Resume Content:**\n```\nJohn Doe\nEmail: john.doe@example.com\nProfile ID: 12345\nLocation: San Francisco, CA\nHeadline: Senior Software Developer at Tech Solutions\nSummary: Experienced software developer specializing in full-stack development with extensive knowledge in Python, JavaScript, and SQL.\nEducation: BSc in Computer Science from Stanford University\nExperience: 5 years at XYZ Corp as Lead Developer\nSkills: Python, JavaScript, SQL, React\nSeeking Positions: Software Developer, Full Stack Developer\nPreferred Locations: San Francisco, Remote\n```\n**Output:**\n```json\n{{\n    'summary': 'Experienced software developer specializing in full-stack development with extensive knowledge in Python, JavaScript, and SQL.',\n    'name': 'John Doe',\n    'email': 'john.doe@example.com',\n    'profile_id': '12345',\n    'location_name': 'San Francisco, CA',\n    'headline': 'Senior Software Developer at Tech Solutions',\n    'education': 'BSc in Computer Science from Stanford University',\n    'experience': '5 years at XYZ Corp as Lead Developer',\n    'skills': 'Python, JavaScript, SQL, React',\n    'preferred_jobs': 'Software Developer, Full Stack Developer',\n    'preferred_locations': 'San Francisco, Remote'\n  }\n```\n**Note:**\n- Pay close attention to accurately transcribe each section of the resume into the appropriate field in the JSON dictionary.\nInput Resume:\n{RESUME}\n**Output:**",
    "GENERATE_COVER_LETTER_PROMPT": "Generate a cover letter for the following candidate:\nProfile:\n{PROFILE}\nJob Description:\n{JOB_DESCRIPTION}\nInstructions:\nThe cover letter should be professional and tailored to the specific job description provided. It should highlight the candidate's relevant skills, experiences, and motivations for applying for the position. The tone should be formal, respectful, and enthusiastic about the opportunity.\nPlease start the cover letter with a proper salutation (e.g., 'Dear Hiring Manager,') and end with a courteous closing (e.g., 'Sincerely, [Candidate's Name]'). Include a brief introduction, a detailed main body that addresses key points from the job description, and a strong conclusion that reiterates the candidate's interest and suitability for the role.\n Do not include placeholders, use information from the provided profile and the job description.",
    "SKILL_MATCH_SCORE_PROMPT": "\nExtract and list only the TECHNICAL and ACTIONABLE skills and ignore skills like 'Communication', 'Leadership', etc. from the profile and the required skills from the job description. If the profile contains a skills column, extend this column based on the information from the summary, education, and experience sectionsm, but only include those skills which are related to the job. If the profile is empty or incomplete, do not come up with skills on your own.\nSteps to List Skills:\n1. Extract only technical and actionable skills from the profile and the job description.\n2. If a skills column exists in the profile, enhance it using details from the profile's summary, education, and experience sections.\n3. Normalize the skill names to maintain consistency and avoid duplicates (e.g., always use 'Python' instead of 'python', 'Artificial Intelligence' instead of 'AI').\n4. Identify skills that overlap between the profile and the job description.\n5. Identify skills mentioned in the job description that are not present in the profile.\nHere is an Example:\nProfile: \"Experienced software developer proficient in Java, Python, and SQL. Passionate about building scalable web applications.\"\nJob Description: \"Seeking a software engineer to develop innovative software solutions using Java and Python. Familiarity with web application frameworks is a plus.\"\nExample Explanation:\n- Profile Skills: Java, Python, SQL, Scalable Web Applications\n- Job Description Requirements: Java, Python, Web Application Frameworks\n- Overlapped Skills: Java, Python\n- Skills to be Learned: Web Application Frameworks\nReturn a JSON object {{\"PROFILE_SKILLS\":[], \"JOB_DESCRIPTION_REQUIRED_SKILLS\":[], \"OVERLAPPED_SKILLS\":[], \"SKILLS_TO_BE_LEARNED\":[]}} containing the extracted and normalized skills, overlapped skills, and skills to be learned from both the profile and the job description.\nMaintain the json format as shown because the output will be parsed and used in another function.\nPlease list the skills based on the above method for the given profile and job description. \nProfile:\n{PROFILE}\nJob Description:\n{JOB_DESCRIPTION}",
    "GET_PROFILE_SUGGESTIONS_PROMPT": "\n**Task Description:**\nExtract technical skills, job preferences, preferred job locations, and map the persona from a given individual's profile. The profile is detailed and includes several sections like summary, headline, experience, education, and more. Your task is to generate a JSON dictionary with the following fields: `skills`, `preferred_jobs`, `preferred_locations`, and `persona`. Ensure the output is strictly in the specified format, as it will be parsed and utilized by another function.\n**Input:**\n- **Profile Details**: A JSON object containing various fields related to the individual's professional and personal details.\n**Input Example:**\n```\n{{\n    \"summary\": \"Experienced software developer specializing in modern web technologies...\",\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"profile_id\": \"12345\",\n    \"profile_image\": \"url_to_image\",\n    \"location_name\": \"San Francisco, CA\",\n    \"headline\": \"Senior Software Developer at Tech Solutions\",\n    \"education\": \"Bachelor of Science in Computer Science from Stanford University\",\n    \"experience\": \"5 years at XYZ Corp as Lead Developer\"\n}}\n```\n**Output Format:**\nReturn a JSON dictionary containing the fields `skills`, `preferred_jobs`, `preferred_locations`, and `persona`:\n```json\n{{\n    \"skills\": [\"Python\", \"JavaScript\", \"SQL\", \"React\"],\n    \"preferred_jobs\": [\"Software Developer\", \"Full Stack Developer\"],\n    \"preferred_locations\": [\"San Francisco\", \"Remote\"],\n    \"persona\": \"Software Engineer\"\n}}\n```\n**Note:**\n- Extract technical skills based on the headline, summary, education, experience, and any other relevant fields.\n- Extract job preferences and preferred job locations based on the profile information.\n- Map the persona to one of the following roles: {PERSONAS}.\n**Input Profile:**\n{PROFILE}\n**Output:**"
}